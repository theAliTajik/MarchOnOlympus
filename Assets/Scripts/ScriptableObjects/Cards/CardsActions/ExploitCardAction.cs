using System;
using System.Collections;
using System.Collections.Generic;
using Game;
using UnityEngine;
using UnityEngine.EventSystems;

public class ExploitCardAction : BaseCardAction
{
    public override void Play(BaseCardData cardData, Action finishCallback, Fighter target, CardDisplay cardDisplay)
    {
        StartCoroutine(WaitAndExecute(finishCallback, 2f,cardData, target, cardDisplay));
    }

    private IEnumerator WaitAndExecute(Action finishCallback, float delay, BaseCardData cardData, Fighter target, CardDisplay cardDisplay)
    {
        ExploitCard c = (ExploitCard)cardData;
        
        //get num of debuffs enemy has
        List<MechanicType> debuffs = GameInfoHelper.GetAllDebuffMechanics();
        int numOfDebuffs = 0;
        for (var i = 0; i < debuffs.Count; i++)
        {
            if (MechanicsManager.Instance.Contains(target, debuffs[i]))
            {
                numOfDebuffs++;
            }
        }
        //damage based on num

        if (numOfDebuffs > 0)
        {
            target.TakeDamage(numOfDebuffs * c.DamageMultiplier, CombatManager.Instance.Player, true);
        }
        
        if (CombatManager.Instance.CurrentStance == cardData.MStance)
        {
            GameActionHelper.SwtichStance(c.SwitchToStance);
        }
        
        finishCallback?.Invoke();
        yield break;
    }

}